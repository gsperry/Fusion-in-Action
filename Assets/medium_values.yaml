global:
  zkReplicaCount: 1

fusion-jupyter:
  enabled: true
  nodeSelector:
    cloud.google.com/gke-nodepool: default-pool

sql-service:
  enabled: true
  logstashEnabled: false
  nodeSelector:
    cloud.google.com/gke-nodepool: default-pool
  replicaCount: 0
  service:
    thrift:
      type: "ClusterIP"

solr:
  nodeSelector:
    cloud.google.com/gke-nodepool: default-pool
  image:
    tag: 8.4.1
  updateStrategy:
    type: "RollingUpdate"
  javaMem: "-Xmx3g -Dfusion_node_type=system"
  solrGcTune: "-XX:+UseG1GC -XX:-OmitStackTraceInFastThrow -XX:+UseStringDeduplication -XX:+PerfDisableSharedMem -XX:+ParallelRefProcEnabled -XX:MaxGCPauseMillis=150 -XX:+UseLargePages -XX:+AlwaysPreTouch"
  volumeClaimTemplates:
    storageSize: "50Gi"
  replicaCount: 1
  resources: {}
  exporter:
    enabled: false
    podAnnotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "9983"
      prometheus.io/path: "/metrics"
    nodeSelector:
      cloud.google.com/gke-nodepool: default-pool

zookeeper:
  logstashEnabled: false
  resources:
    limits:
      cpu: "250m"
      memory: "578Mi"
    requests:
      cpu: "100m"
      memory: "256Mi"
  nodeSelector:
    cloud.google.com/gke-nodepool: default-pool
  replicaCount: 1
  persistence:
    size: 15Gi
  env:
    ZK_HEAP_SIZE: 1G
    ZK_PURGE_INTERVAL: 1

ml-model-service:
  enabled: false
  logstashEnabled: false
  image:
    imagePullPolicy: "IfNotPresent"
  nodeSelector:
    cloud.google.com/gke-nodepool: default-pool
  modelRepoImpl: fusion
  fs:
    enabled: true
  javaToolOptions: "-Dlogging.level.com.lucidworks.fusion.ml=INFO"

fusion-admin:
  logstashEnabled: false
  nodeSelector:
    cloud.google.com/gke-nodepool: default-pool
  readinessProbe:
    initialDelaySeconds: 120

fusion-indexing:
  logstashEnabled: false
  nodeSelector:
    cloud.google.com/gke-nodepool: default-pool
  readinessProbe:
    initialDelaySeconds: 120
  pod:
    annotations:
      prometheus.io/port: "8765"
      prometheus.io/scrape: "true"
      prometheus.io/path: "/actuator/prometheus"

query-pipeline:
  logstashEnabled: false
  nodeSelector:
    cloud.google.com/gke-nodepool: default-pool
  javaToolOptions: "-Xmx2g -Dserver.jetty.max-threads=1000 -Dcom.lucidworks.httpclient.defaultMaxPerRoute=1000 -Dcom.lucidworks.httpclient.maxTotalConnections=1000 -Dhttp.maxConnections=1000"
  pod:
    annotations:
      prometheus.io/port: "8787"
      prometheus.io/scrape: "true"
      prometheus.io/path: "/actuator/prometheus"

api-gateway:
  logstashEnabled: false
  resources:
    limits:
      cpu: "667m"
      memory: "512Mi"
    requests:
      cpu: "333m"
      memory: "256Mi"
  externalTrafficPolicy: "Local"
  nodeSelector:
    cloud.google.com/gke-nodepool: default-pool
  javaToolOptions: "-Xmx2g"

classic-rest-service:
  logstashEnabled: false
  nodeSelector:
    cloud.google.com/gke-nodepool: default-pool

insights:
  enabled: false
  nodeSelector:
    cloud.google.com/gke-nodepool: default-pool

job-launcher:
  logstashEnabled: false
  nodeSelector:
    cloud.google.com/gke-nodepool: default-pool

job-rest-server:
  logstashEnabled: false
  nodeSelector:
    cloud.google.com/gke-nodepool: default-pool

rest-service:
  logstashEnabled: false
  nodeSelector:
    cloud.google.com/gke-nodepool: default-pool

rpc-service:
  enabled: false
  logstashEnabled: false
  nodeSelector:
    cloud.google.com/gke-nodepool: default-pool

auth-ui:
  resources:
    limits:
      cpu: "50m"
      memory: "100Mi"
    requests:
      cpu: "25m"
      memory: "5Mi"
  nodeSelector:
    cloud.google.com/gke-nodepool: default-pool

admin-ui:
  resources:
    limits:
      cpu: "50m"
      memory: "100Mi"
    requests:
      cpu: "25m"
      memory: "5Mi"
  nodeSelector:
    cloud.google.com/gke-nodepool: default-pool

devops-ui:
  resources:
    limits:
      cpu: "50m"
      memory: "100Mi"
    requests:
      cpu: "25m"
      memory: "5Mi"
  nodeSelector:
    cloud.google.com/gke-nodepool: default-pool

rules-ui:
  resources:
    limits:
      cpu: "50m"
      memory: "100Mi"
    requests:
      cpu: "25m"
      memory: "5Mi"
  enabled: true
  nodeSelector:
    cloud.google.com/gke-nodepool: default-pool

webapps:
  enabled: false
  resources:
    limits:
      cpu: "50m"
      memory: "100Mi"
    requests:
      cpu: "25m"
      memory: "5Mi"
  nodeSelector:
    cloud.google.com/gke-nodepool: default-pool

pulsar:
  broker:
    nodeSelector:
      cloud.google.com/gke-nodepool: default-pool
    nnotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "8080"
    configData:
      PULSAR_MEM: '"-Xms256m -Xmx450m -Dio.netty.leakDetectionLevel=disabled
      -Dio.netty.recycler.linkCapacity=1024 -XX:+ParallelRefProcEnabled -XX:+UnlockExperimentalVMOptions
      -XX:+AggressiveOpts -XX:+DoEscapeAnalysis
      -XX:+DisableExplicitGC -XX:-ResizePLAB -XX:+ExitOnOutOfMemoryError
      -XX:+PerfDisableSharedMem"'
    resources:
      requests:
        cpu: "300m"
        memory: "300Mi"
      limits:
        cpu: "500m"
        memory: "512Mi"
  bookkeeper:
    nodeSelector:
      cloud.google.com/gke-nodepool: default-pool
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "8000"
    configData:
      BOOKIE_MEM: '"-Xms256m -Xmx256m -Dio.netty.leakDetectionLevel=disabled
      -Dio.netty.recycler.linkCapacity=1024 -XX:+ParallelRefProcEnabled -XX:+UnlockExperimentalVMOptions
      -XX:+AggressiveOpts -XX:+DoEscapeAnalysis
      -XX:+DisableExplicitGC -XX:-ResizePLAB -XX:+ExitOnOutOfMemoryError
      -XX:+PerfDisableSharedMem -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCApplicationStoppedTime
      -XX:+PrintHeapAtGC -verbosegc -XX:G1LogLevel=finest"'
    resources:
      requests:
        cpu: "300m"
        memory: "300Mi"
      limits:
        cpu: "500m"
        memory: "380Mi"

logstash:
  enabled: false
  nodeSelector:
    cloud.google.com/gke-nodepool: default-pool
